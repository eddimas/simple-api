name: Deploy Infrastructure and Lambda Functions

on:
  push:
    branches:
      - main

jobs:
  setup-s3:
    name: Setup S3 Bucket
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Initialize Terraform for S3
        working-directory: terraform/s3
        run: terraform init

      - name: Apply Terraform for S3
        working-directory: terraform/s3
        run: terraform apply -auto-approve

  upload-lambda-code:
    name: Upload Lambda Code to S3
    runs-on: ubuntu-latest
    needs: setup-s3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install dependencies and package Lambda functions
        run: |
          mkdir -p lambda/get
          mkdir -p lambda/post
          mkdir -p lambda/delete

          cp lambda/get/device_data.py lambda/get/
          cp lambda/post/device_data.py lambda/post/
          cp lambda/post/device_data.py lambda/delete/

          pip install -r requirements.txt -t lambda/get/
          pip install -r requirements.txt -t lambda/post/
          pip install -r requirements.txt -t lambda/delete/

          cd lambda/get
          zip -r ../../get.zip .
          cd ../post
          zip -r ../../post.zip .
          cd ../delete
          zip -r ../../delete.zip .

      - name: Upload Lambda ZIPs to S3
        run: |
          aws s3 cp get.zip s3://device-raw-data-bucket/
          aws s3 cp post.zip s3://device-raw-data-bucket/
          aws s3 cp delete.zip s3://device-raw-data-bucket/

  terraform:
    name: Provision Infrastructure
    runs-on: ubuntu-latest
    needs: upload-lambda-code

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Initialize Terraform
        working-directory: terraform/main
        run: terraform init

      - name: Apply Terraform
        working-directory: terraform/main
        run: terraform apply -auto-approve

  update-lambda-code:
    name: Update Lambda Code
    runs-on: ubuntu-latest
    needs: terraform # Ensures Terraform completes first

    steps:
      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update Lambda Functions
        run: |
          aws lambda update-function-code --function-name get --s3-bucket device-raw-data-bucket --s3-key get.zip
          aws lambda update-function-code --function-name post --s3-bucket device-raw-data-bucket --s3-key post.zip
